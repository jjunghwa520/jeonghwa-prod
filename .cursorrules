# Cursor AI Rules for Ruby on Rails Project (완전 자율 모드)

## 🎯 프로젝트 컨텍스트
- **프레임워크**: Ruby on Rails 8.0.2.1
- **Ruby 버전**: 3.4.5
- **데이터베이스**: SQLite3 (개발/테스트), 프로덕션용 다중 DB
- **배포**: Kamal 배포 시스템
- **개발 환경**: macOS (Apple Silicon)
- **스타일 가이드**: Rubocop Rails Omakase

## 🚀 완전 자율 모드 설정
**중요**: AI가 모든 명령어를 자동으로 실행할 수 있습니다. 확인 없이 바로 실행됩니다.

### ✅ 자동 실행 가능한 명령어들
- `bundle install` - 의존성 설치
- `rails generate` - 코드 생성 (컨트롤러, 모델, 마이그레이션 등)
- `rails db:create` - 데이터베이스 생성
- `rails db:migrate` - 마이그레이션 실행
- `rails db:seed` - 시드 데이터 생성
- `rails test` - 테스트 실행
- `rails server` - 개발 서버 시작
- `rails console` - Rails 콘솔
- `rubocop` - 코드 스타일 검사
- `rubocop -A` - 자동 수정
- `git add .` - Git 스테이징
- `git commit` - Git 커밋
- `npm install` / `yarn install` - JavaScript 의존성

### ⚡ 터보 모드 동작 방식
1. **즉시 실행**: 사용자가 요청하면 바로 명령어 실행
2. **병렬 처리**: 여러 작업을 동시에 수행
3. **자동 저장**: 파일 수정 후 자동 저장
4. **자동 테스트**: 코드 변경 후 관련 테스트 자동 실행
5. **자동 수정**: Rubocop 오류 발견 시 자동 수정

## 📝 코딩 규칙 및 베스트 프랙티스

### Ruby/Rails 스타일
- Rubocop Rails Omakase 규칙 준수
- 메서드명: snake_case
- 클래스명: PascalCase
- 상수명: SCREAMING_SNAKE_CASE
- 한 줄 최대 120자

### 파일 구조
```
app/
├── controllers/     # 컨트롤러
├── models/         # 모델
├── views/          # 뷰 템플릿
├── helpers/        # 헬퍼
├── jobs/           # 백그라운드 작업
└── mailers/        # 메일러

config/
├── routes.rb       # 라우팅
├── database.yml    # DB 설정
└── environments/   # 환경별 설정
```

### 테스트 전략
- **TDD 권장**: 테스트 먼저 작성
- **테스트 위치**: `test/` 디렉토리
- **자동 실행**: 코드 변경 시 관련 테스트 자동 실행

## 🔒 보안 및 안전 규칙

### ⚠️ 주의가 필요한 명령어 (자동 실행하되 로그 남김)
- `rails db:drop` - 데이터베이스 삭제
- `rails db:reset` - 데이터베이스 리셋
- `rm -rf` - 파일/디렉토리 삭제
- 프로덕션 환경 관련 작업

### 🚫 절대 건드리지 않는 파일들
- `config/credentials.yml.enc` - 암호화된 자격증명
- `.kamal/secrets` - 배포 시크릿
- `config/master.key` - 마스터 키

## 🌍 응답 언어 설정
- **기본 응답**: 한글
- **코드/명령어**: 영어
- **에러 메시지**: 한글로 설명
- **문서/주석**: 한글

## 🎨 UI/UX 가이드라인
- **반응형 디자인** 우선
- **접근성** 고려 (WCAG 2.1)
- **모던 CSS** 사용 (Flexbox, Grid)
- **성능 최적화** 고려

## 🔧 자동화 워크플로우
1. 요청 받음 → 즉시 분석
2. 필요한 명령어 식별 → 자동 실행
3. 파일 생성/수정 → 자동 저장
4. 테스트 실행 → 결과 확인
5. 코드 스타일 검사 → 자동 수정
6. 최종 결과 보고

## 💡 예시 시나리오
**사용자**: "User 모델을 만들어줘"
**AI 동작**:
1. `rails generate model User name:string email:string` 실행
2. 마이그레이션 파일 확인
3. `rails db:migrate` 실행
4. 관련 테스트 파일 확인
5. `rails test` 실행
6. 결과 보고

이제 완전 자율 모드로 작업할 준비가 완료되었습니다! 🚀


