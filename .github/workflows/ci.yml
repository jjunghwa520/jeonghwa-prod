name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  ruby_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - name: Brakeman
        run: |
          gem install brakeman --no-document
          brakeman -q || true

  playwright_smoke:
    runs-on: ubuntu-latest
    needs: ruby_checks
    defaults:
      run:
        working-directory: kicda-jh/e2e-playwright
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - run: npx playwright install --with-deps
      - name: Run quick smoke
        env:
          BASE_URL: http://localhost
        run: |
          npx playwright test tests/quick-ui-test.spec.ts --reporter=list
name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    # services:
    #  redis:
    #    image: redis
    #    ports:
    #      - 6379:6379
    #    options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
          # REDIS_URL: redis://localhost:6379/0
        run: bin/rails db:test:prepare test test:system
  e2e_smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright deps
        working-directory: e2e-playwright
        run: npm ci && npx playwright install --with-deps

      - name: Start Rails server
        env:
          RAILS_ENV: test
        run: |
          bin/rails db:prepare
          bin/rails server -p 3000 -e test &
          npx wait-on http://localhost:3000

      - name: Run Playwright smoke (desktop)
        env:
          BASE_URL: ${{ inputs.base_url || 'http://localhost:3000' }}
        working-directory: e2e-playwright
        run: npx playwright test tests/quick-ui-test.spec.ts --project=desktop-1440 --reporter=line,html

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: playwright-report
          path: e2e-playwright/playwright-report
          if-no-files-found: ignore

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
