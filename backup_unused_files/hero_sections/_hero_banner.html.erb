<!-- 고급 히어로 배너 -->
<section class="hero-banner-premium">
  <!-- 애니메이션 배경 레이어 -->
  <div class="hero-background">
    <!-- 그라데이션 웨이브 -->
    <div class="wave-container">
      <svg class="wave wave-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
        <path fill="rgba(102, 126, 234, 0.1)" d="M0,96L48,112C96,128,192,160,288,186.7C384,213,480,235,576,213.3C672,192,768,128,864,128C960,128,1056,192,1152,208C1248,224,1344,192,1392,176L1440,160L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path>
      </svg>
      <svg class="wave wave-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
        <path fill="rgba(118, 75, 162, 0.1)" d="M0,64L48,80C96,96,192,128,288,128C384,128,480,96,576,90.7C672,85,768,107,864,138.7C960,171,1056,213,1152,213.3C1248,213,1344,171,1392,149.3L1440,128L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path>
      </svg>
    </div>
    
    <!-- 플로팅 요소들 -->
    <div class="floating-elements">
      <div class="float-element" style="--delay: 0s; --duration: 20s;">
        <span class="emoji-3d">📚</span>
      </div>
      <div class="float-element" style="--delay: 3s; --duration: 25s;">
        <span class="emoji-3d">🦄</span>
      </div>
      <div class="float-element" style="--delay: 6s; --duration: 22s;">
        <span class="emoji-3d">🌟</span>
      </div>
      <div class="float-element" style="--delay: 9s; --duration: 28s;">
        <span class="emoji-3d">🏰</span>
      </div>
      <div class="float-element" style="--delay: 12s; --duration: 24s;">
        <span class="emoji-3d">🧚‍♀️</span>
      </div>
      <div class="float-element" style="--delay: 15s; --duration: 26s;">
        <span class="emoji-3d">🐉</span>
      </div>
    </div>
    
    <!-- 파티클 효과 -->
    <div class="particles">
      <% 30.times do |i| %>
        <div class="particle" style="--x: <%= rand(100) %>%; --y: <%= rand(100) %>%; --duration: <%= rand(10..30) %>s; --delay: <%= rand(0..10) %>s;"></div>
      <% end %>
    </div>
  </div>
  
  <!-- 메인 콘텐츠 -->
  <div class="container hero-content">
    <div class="row align-items-center min-vh-100">
      <div class="col-lg-6" data-aos="fade-right">
        <!-- 배지 -->
        <div class="hero-badge">
          <span class="badge-premium">
            <i class="bi bi-star-fill"></i> 2024 최고의 동화책 플랫폼
          </span>
        </div>
        
        <!-- 메인 타이틀 -->
        <h1 class="hero-title">
          <span class="title-line">
            <span class="gradient-text-animated">마법 같은</span>
          </span>
          <span class="title-line">
            <span class="text-primary">동화책 세상</span>
          </span>
          <span class="title-line">
            <span class="brand-highlight">정화의 서재</span>
          </span>
        </h1>
        
        <!-- 서브 타이틀 -->
        <p class="hero-description">
          <span class="typing-text"></span>
        </p>
        
        <!-- CTA 버튼 그룹 -->
        <div class="hero-buttons">
          <%= link_to courses_path(category: 'ebook'), class: "btn-hero btn-primary-hero" do %>
            <span class="btn-icon">📖</span>
            <span class="btn-text">
              <strong>전자동화책</strong>
              <small>5,000원부터</small>
            </span>
          <% end %>
          
          <%= link_to courses_path(category: 'storytelling'), class: "btn-hero btn-secondary-hero" do %>
            <span class="btn-icon">🎭</span>
            <span class="btn-text">
              <strong>구연동화</strong>
              <small>월 9,900원</small>
            </span>
          <% end %>
          
          <%= link_to courses_path(category: 'education'), class: "btn-hero btn-tertiary-hero" do %>
            <span class="btn-icon">✍️</span>
            <span class="btn-text">
              <strong>동화만들기</strong>
              <small>교육과정</small>
            </span>
          <% end %>
        </div>
        
        <!-- 통계 -->
        <div class="hero-stats">
          <div class="stat-item">
            <span class="stat-number" data-count="1000">0</span>
            <span class="stat-label">동화책</span>
          </div>
          <div class="stat-item">
            <span class="stat-number" data-count="50000">0</span>
            <span class="stat-label">회원</span>
          </div>
          <div class="stat-item">
            <span class="stat-number" data-count="4.9">0</span>
            <span class="stat-label">평점</span>
          </div>
        </div>
      </div>
      
      <!-- 일러스트 섹션 -->
      <div class="col-lg-6" data-aos="fade-left">
        <div class="hero-illustration">
          <!-- 3D 북 애니메이션 -->
          <div class="book-3d-container">
            <div class="book-3d">
              <div class="book-cover book-front">
                <div class="cover-content">
                  <span class="cover-emoji">🏰</span>
                  <h3>정화의 서재</h3>
                  <p>Magic Stories</p>
                </div>
              </div>
              <div class="book-cover book-back"></div>
              <div class="book-spine">정화의 서재</div>
              <div class="book-pages"></div>
            </div>
          </div>
          
          <!-- 캐릭터 카드 -->
          <div class="character-cards">
            <div class="character-card" style="--index: 1;">
              <span class="char-emoji">🦁</span>
              <span class="char-name">사자왕</span>
            </div>
            <div class="character-card" style="--index: 2;">
              <span class="char-emoji">🧚‍♀️</span>
              <span class="char-name">요정</span>
            </div>
            <div class="character-card" style="--index: 3;">
              <span class="char-emoji">🐰</span>
              <span class="char-name">토끼</span>
            </div>
            <div class="character-card" style="--index: 4;">
              <span class="char-emoji">🐻</span>
              <span class="char-name">곰돌이</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- 스크롤 인디케이터 -->
  <div class="scroll-indicator">
    <div class="mouse">
      <div class="wheel"></div>
    </div>
    <p>스크롤하여 더보기</p>
  </div>
</section>

<style>
/* 프리미엄 히어로 배너 스타일 */
.hero-banner-premium {
  position: relative;
  min-height: 100vh;
  overflow: hidden;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

/* 애니메이션 배경 */
.hero-background {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
}

.wave-container {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  overflow: hidden;
}

.wave {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 200px;
}

.wave-1 {
  animation: wave-animation 20s linear infinite;
  opacity: 0.7;
}

.wave-2 {
  animation: wave-animation 15s linear infinite reverse;
  opacity: 0.5;
}

@keyframes wave-animation {
  0% { transform: translateX(0); }
  100% { transform: translateX(-50%); }
}

/* 플로팅 요소 */
.floating-elements {
  position: absolute;
  width: 100%;
  height: 100%;
}

.float-element {
  position: absolute;
  animation: float-around var(--duration) var(--delay) infinite ease-in-out;
}

.emoji-3d {
  font-size: 3rem;
  filter: drop-shadow(0 10px 20px rgba(0,0,0,0.2));
  display: inline-block;
  animation: rotate-3d 10s linear infinite;
}

@keyframes float-around {
  0%, 100% {
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    transform: translate(100px, -100px) rotate(90deg);
  }
  50% {
    transform: translate(-50px, -200px) rotate(180deg);
  }
  75% {
    transform: translate(-150px, -50px) rotate(270deg);
  }
}

@keyframes rotate-3d {
  0% { transform: rotateY(0deg); }
  100% { transform: rotateY(360deg); }
}

/* 파티클 효과 */
.particles {
  position: absolute;
  width: 100%;
  height: 100%;
}

.particle {
  position: absolute;
  left: var(--x);
  top: var(--y);
  width: 4px;
  height: 4px;
  background: rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  animation: particle-float var(--duration) var(--delay) infinite linear;
}

@keyframes particle-float {
  0% {
    transform: translateY(0) scale(1);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(-100vh) scale(0);
    opacity: 0;
  }
}

/* 히어로 콘텐츠 */
.hero-content {
  position: relative;
  z-index: 10;
  padding: 100px 0;
}

.hero-badge {
  margin-bottom: 2rem;
}

.badge-premium {
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
  color: white;
  padding: 8px 20px;
  border-radius: 30px;
  font-size: 0.9rem;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  animation: glow-badge 2s ease-in-out infinite;
}

@keyframes glow-badge {
  0%, 100% { box-shadow: 0 0 20px rgba(255, 255, 255, 0.3); }
  50% { box-shadow: 0 0 30px rgba(255, 255, 255, 0.5); }
}

/* 타이틀 스타일 */
.hero-title {
  font-size: 4rem;
  font-weight: 900;
  line-height: 1.2;
  margin-bottom: 1.5rem;
  color: white;
}

.title-line {
  display: block;
  overflow: hidden;
}

.gradient-text-animated {
  background: linear-gradient(90deg, #fff, #ffd700, #fff);
  background-size: 200% auto;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: gradient-shift 3s linear infinite;
}

@keyframes gradient-shift {
  0% { background-position: 0% center; }
  100% { background-position: 200% center; }
}

.brand-highlight {
  position: relative;
  display: inline-block;
  color: #ffd700;
  text-shadow: 0 0 30px rgba(255, 215, 0, 0.5);
}

/* 타이핑 효과 */
.hero-description {
  font-size: 1.25rem;
  color: rgba(255, 255, 255, 0.9);
  margin-bottom: 2rem;
  min-height: 2em;
}

.typing-text::after {
  content: '|';
  animation: blink 1s infinite;
}

@keyframes blink {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0; }
}

/* 히어로 버튼 */
.hero-buttons {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  margin-bottom: 3rem;
}

.btn-hero {
  padding: 1rem 2rem;
  border-radius: 60px;
  border: none;
  display: flex;
  align-items: center;
  gap: 12px;
  text-decoration: none;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.btn-hero::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.btn-hero:hover::before {
  width: 300px;
  height: 300px;
}

.btn-primary-hero {
  background: white;
  color: #667eea;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
}

.btn-primary-hero:hover {
  transform: translateY(-3px);
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
}

.btn-secondary-hero {
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.3);
}

.btn-tertiary-hero {
  background: rgba(255, 215, 0, 0.9);
  color: #764ba2;
}

.btn-icon {
  font-size: 1.5rem;
}

.btn-text {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.btn-text strong {
  font-size: 1rem;
}

.btn-text small {
  font-size: 0.75rem;
  opacity: 0.8;
}

/* 통계 */
.hero-stats {
  display: flex;
  gap: 3rem;
}

.stat-item {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.stat-number {
  font-size: 2.5rem;
  font-weight: 900;
  color: white;
}

.stat-label {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.9rem;
}

/* 3D 북 */
.hero-illustration {
  position: relative;
  height: 600px;
}

.book-3d-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  perspective: 1000px;
}

.book-3d {
  width: 300px;
  height: 400px;
  position: relative;
  transform-style: preserve-3d;
  animation: book-rotate 20s linear infinite;
}

@keyframes book-rotate {
  0% { transform: rotateY(0deg); }
  100% { transform: rotateY(360deg); }
}

.book-cover {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 10px;
}

.book-front {
  background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%);
  transform: translateZ(20px);
  display: flex;
  align-items: center;
  justify-content: center;
}

.cover-content {
  text-align: center;
  color: #764ba2;
}

.cover-emoji {
  font-size: 4rem;
  display: block;
  margin-bottom: 1rem;
}

.book-back {
  background: linear-gradient(135deg, #ffc107 0%, #ff9800 100%);
  transform: rotateY(180deg) translateZ(20px);
}

.book-spine {
  position: absolute;
  left: 0;
  top: 0;
  width: 40px;
  height: 100%;
  background: linear-gradient(135deg, #ff9800 0%, #ff5722 100%);
  transform: rotateY(-90deg) translateZ(20px);
  display: flex;
  align-items: center;
  justify-content: center;
  writing-mode: vertical-rl;
  color: white;
  font-weight: bold;
}

.book-pages {
  position: absolute;
  left: 40px;
  top: 10px;
  right: 10px;
  bottom: 10px;
  background: repeating-linear-gradient(
    90deg,
    #f5f5f5,
    #f5f5f5 2px,
    #e0e0e0 2px,
    #e0e0e0 4px
  );
  transform: translateZ(0);
}

/* 캐릭터 카드 */
.character-cards {
  position: absolute;
  width: 100%;
  height: 100%;
}

.character-card {
  position: absolute;
  background: white;
  border-radius: 20px;
  padding: 1rem;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  animation: float-card calc(3s + var(--index) * 0.5s) ease-in-out infinite;
}

.character-card:nth-child(1) { top: 10%; right: 10%; }
.character-card:nth-child(2) { top: 30%; right: 5%; }
.character-card:nth-child(3) { bottom: 30%; right: 15%; }
.character-card:nth-child(4) { bottom: 10%; right: 8%; }

@keyframes float-card {
  0%, 100% { transform: translateY(0) rotate(-5deg); }
  50% { transform: translateY(-20px) rotate(5deg); }
}

.char-emoji {
  font-size: 2rem;
}

.char-name {
  font-size: 0.9rem;
  font-weight: 600;
  color: #667eea;
}

/* 스크롤 인디케이터 */
.scroll-indicator {
  position: absolute;
  bottom: 30px;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  z-index: 10;
}

.mouse {
  width: 30px;
  height: 50px;
  border: 2px solid rgba(255, 255, 255, 0.8);
  border-radius: 15px;
  margin: 0 auto 10px;
  position: relative;
}

.wheel {
  width: 4px;
  height: 10px;
  background: rgba(255, 255, 255, 0.8);
  border-radius: 2px;
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  animation: scroll-wheel 2s infinite;
}

@keyframes scroll-wheel {
  0% { transform: translateX(-50%) translateY(0); opacity: 1; }
  100% { transform: translateX(-50%) translateY(20px); opacity: 0; }
}

.scroll-indicator p {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.9rem;
}

/* 반응형 */
@media (max-width: 768px) {
  .hero-title {
    font-size: 2.5rem;
  }
  
  .hero-buttons {
    flex-direction: column;
  }
  
  .btn-hero {
    width: 100%;
    justify-content: center;
  }
  
  .hero-stats {
    justify-content: space-around;
  }
  
  .book-3d-container {
    transform: translate(-50%, -50%) scale(0.7);
  }
  
  .character-cards {
    display: none;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // 타이핑 효과
  const texts = [
    "아이들의 상상력을 키우는 특별한 동화책 플랫폼",
    "전문 성우가 들려주는 생생한 구연동화",
    "나만의 동화책을 만드는 창작 교육",
    "매일 새로운 이야기가 펼쳐지는 마법의 공간"
  ];
  
  let textIndex = 0;
  let charIndex = 0;
  let isDeleting = false;
  const typingElement = document.querySelector('.typing-text');
  
  function typeText() {
    const currentText = texts[textIndex];
    
    if (isDeleting) {
      typingElement.textContent = currentText.substring(0, charIndex - 1);
      charIndex--;
      
      if (charIndex === 0) {
        isDeleting = false;
        textIndex = (textIndex + 1) % texts.length;
        setTimeout(typeText, 500);
        return;
      }
    } else {
      typingElement.textContent = currentText.substring(0, charIndex + 1);
      charIndex++;
      
      if (charIndex === currentText.length) {
        isDeleting = true;
        setTimeout(typeText, 2000);
        return;
      }
    }
    
    setTimeout(typeText, isDeleting ? 50 : 100);
  }
  
  typeText();
  
  // 숫자 카운트 애니메이션
  const statNumbers = document.querySelectorAll('.stat-number');
  
  statNumbers.forEach(stat => {
    const target = parseFloat(stat.dataset.count);
    const increment = target / 100;
    let current = 0;
    
    const updateCount = () => {
      current += increment;
      if (current < target) {
        stat.textContent = Math.floor(current).toLocaleString();
        requestAnimationFrame(updateCount);
      } else {
        stat.textContent = target % 1 === 0 ? target.toLocaleString() : target.toFixed(1);
      }
    };
    
    // 스크롤 시 애니메이션 시작
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          updateCount();
          observer.unobserve(entry.target);
        }
      });
    });
    
    observer.observe(stat);
  });
});
</script>
